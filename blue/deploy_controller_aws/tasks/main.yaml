---
- name: Launch cloudformation template
  cloudformation:
    stack_name: "{{stack_name}}"
    state: "present"
    disable_rollback: true
    template: "blue-cft.json"
    template_parameters:
      ExistingVPCId: "{{vpc_id}}"
      ExistingVPCCIDR: "{{vpc_cidr}}"
      ExistingSubnetId: "{{subnet_id}}"
      ExistingKeyPairName: "{{keypair}}"
      ExistingIAMRole: ""
      EnabledUserPass: "true"
    validate_certs : false
  register: stack

- name: Show cloud formation stack output
  debug: msg="Stack output = {{stack.stack_outputs}}"

- name: Get Controller facts based on instance ID
  ec2_instance_facts:
    instance_ids:
      - "{{stack.stack_outputs.Password}}"
  register: instance_status

- name: Copy Controller IP address to a variable
  set_fact:
    controller_ip: "{{instance_status.instances[0].public_ip_address}}"

- name: Check for API readiness
  uri:
    url: "https://{{controller_ip}}/api"
    method: "GET"
    return_content: yes
    status_code: 401
    validate_certs: false
  register: api_status
  until: api_status.msg == api_readiness_success
  retries: 50
  delay: 10

- name: Show API status
  debug: var=api_status

- name: Check for UI readiness
  uri:
    url: "https://{{controller_ip}}/ui"
    method: "GET"
    return_content: yes
    status_code: 200
    validate_certs: false
  register: ui_status
  until: ui_status.status == 200
  retries: 10
  delay: 10

- name: Show UI status
  debug: var=ui_status

- name: Change the admin password
  uri:
    url: "https://{{controller_ip}}/api/platform/v1alpha3/users/admin/lifecycle"
    method: "POST"
    return_content: yes
    status_code:
     - 200
     - 401
    body:
     password_payload:
      current_password: "{{stack.stack_outputs.Password}}"
      new_password: "default12345!"
    body_format: json
    validate_certs: false

- name: Get Auth token
  uri:
    url: "https://{{controller_ip}}/api/platform/v1alpha3/login"
    method: "POST"
    body:
     resource_id: "admin"
     password: "default12345!"
    body_format: json
    return_content: yes
    status_code: 200
    validate_certs: false
  register: auth_token

- name: Display token
  debug: msg="{{auth_token.json.token}}"

- name: Copy Auth token to a file for future use. File can be excrypted
  copy:
    content: "admin_auth_token: {{ auth_token.json.token }}"
    dest: "{{stack_name}}_admin_auth_token.yaml"
    mode: 0644
